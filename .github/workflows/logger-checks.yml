name: Logger & Error Handling Checks

on:
  pull_request:
    paths:
      - 'src/**/*.ts'
      - 'src/**/*.tsx'
      - '.eslintrc.js'

permissions:
  contents: read

jobs:
  logger-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run logger unit tests
        run: yarn vitest src/logger --run

      - name: Check for console.* usage in key directories
        run: |
          echo "Checking for console usage in directories that should use logger..."

          # Check only specific directories where logger MUST be used
          TARGET_DIRS=(
            "src/entries/popup"
            "src/entries/background"
            "src/entries/content"
            "src/core/keychain"
            "src/core/network"
            "src/core/resources"
            "src/core/raps"
            "src/core/wagmi"
            "src/analytics"
          )

          FOUND_CONSOLE=false
          for DIR in "${TARGET_DIRS[@]}"; do
            if [ -d "$DIR" ]; then
              CONSOLE_IN_DIR=$(grep -r "console\.\(log\|warn\|error\|debug\)" "$DIR" \
                --include="*.ts" \
                --include="*.tsx" \
                --exclude="*.test.ts" \
                --exclude="*.spec.ts" \
                --exclude="*.test.tsx" || true)

              if [ -n "$CONSOLE_IN_DIR" ]; then
                if [ "$FOUND_CONSOLE" = false ]; then
                  echo "❌ Found console.* statements in production code:"
                  FOUND_CONSOLE=true
                fi
                echo "In $DIR:"
                echo "$CONSOLE_IN_DIR"
              fi
            fi
          done

          if [ "$FOUND_CONSOLE" = true ]; then
            echo ""
            echo "Please use logger instead of console in these directories."
            exit 1
          else
            echo "✅ No console.* usage found in production directories"
          fi

      - name: Verify logger imports
        run: |
          echo "Checking logger import paths..."
          ! grep -r "from ['\"]\.\..*logger" src/ \
            --include="*.ts" \
            --include="*.tsx" \
            --exclude="*.test.ts" \
            --exclude="*.spec.ts" \
            --exclude="eslint-rules.test.ts" || \
          (echo "❌ Found relative logger imports. Use '~/logger' instead." && exit 1)

      - name: Check RainbowError usage
        run: |
          echo "Checking for proper error handling..."
          # Check that catch blocks use logger.error
          ! grep -A 3 "catch.*{" src/ \
            --include="*.ts" \
            --include="*.tsx" | \
            grep "console\.error" || \
          (echo "❌ Found console.error in catch blocks. Use logger.error with RainbowError." && exit 1)

      - name: Run ESLint with default rules
        run: |
          # Run normal linting - the project's .eslintrc.js should handle console rules appropriately
          yarn lint

      - name: Verify logger builds correctly
        run: |
          # Ensure the logger module and its tests compile without errors
          echo "Type checking logger files..."
          npx tsc --noEmit --skipLibCheck \
            src/logger/index.ts \
            src/logger/debugContext.ts \
            src/logger/logger.test.ts \
            src/logger/eslint-rules.test.ts

          echo "✅ Logger files type check passed"