name: Claude Code Review

on:
  # Run on PRs opened, updated
  pull_request:
    types: [opened, synchronize]
    paths:
      # Core code
      - "src/**/*.ts"
      - "src/**/*.tsx"
      - "src/**/*.js"
      - "src/**/*.jsx"
      # Patches
      - "patches/**/*.patch"
      # Changeset additions
      - ".changeset/*.md"
      # Workflows
      - ".github/**/*.yml"
  # Re-run on CI completion
  workflow_run:
    workflows: ["CI"]
    types: [completed]
jobs:
  claude-review:    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      actions: read
      id-token: write

    # Run only for internal contributors (OWNER, MEMBER, or COLLABORATOR)
    # Skip review for draft PRs and PRs with [WIP] in the title
    if: |
      (github.event.pull_request.author_association == 'OWNER' ||
      github.event.pull_request.author_association == 'MEMBER' ||
      github.event.pull_request.author_association == 'COLLABORATOR') &&
      github.event.pull_request.draft == false &&
      !contains(github.event.pull_request.title, '[WIP]')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          additional_permissions: |
            actions: read

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"
          
          # Direct prompt for automated review (no @claude mention needed)
          direct_prompt: |
            Please review this pull request and provide feedback on:
            - Code quality and best practices
            - Potential bugs or issues
            - Performance considerations
            - Proper changeset documentation
            - Test coverage and CI status and failures
            For each file type, focus on:
            - For TypeScript files: Type safety and proper interface usage
            - For API endpoints: Security, input validation, and error handling
            - For React components: Performance, accessibility, and best practices
            - For tests: Coverage, edge cases, and test quality
            - For .changeset/ additions: Changeset style and readability matching CHANGELOG.md
            - For .github/workflows: Ensure the workflow is valid
            - For unit tests and e2e tests: Coverage, edge cases, test quality
            - For failed tests in CI: Provide a detailed explanation of the failure(s) and how to fix
            Since this PR touches critical source code paths, please be thorough
            in your review and provide inline comments where appropriate.
            Be constructive and helpful in your feedback. Use as few words as possible.

          # Use sticky comments to make Claude reuse the same comment on subsequent pushes to the same PR
          use_sticky_comment: true
          
          # Allow linting and typechecking
          allowed_tools: "Bash(yarn run lint),Bash(yarn run typecheck)"

          # Don't waste cycles on e2e tests covered by CI
          disallowed_tools: "Bash(yarn run test),Bash(yarn run vitest:parallel),Bash(yarn run vitest:serial),Bash(yarn run vitest:swap),Bash(yarn run vitest:send),Bash(yarn run vitest:send:optimism),Bash(yarn run vitest:dappInteractions),Bash(yarn run e2e:mac:chrome),Bash(yarn run e2e:mac:firefox),Bash(yarn run e2e:mac),Bash(yarn run e2e)"
