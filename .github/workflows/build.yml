
name: CI

on:
  pull_request:
  merge_group:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  # INSTALL DEPS
  install:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16.20.0"
          cache: 'yarn'
      - name: Install deps via Yarn
        run: yarn setup
      - name: Check for frozen lockfile
        run: yarn check-lockfile
      - name: Zip node_modules
        run: tar czf node_modules.tar.gz node_modules/
      - name: Upload deps artifacts
        uses: actions/upload-artifact@v3
        with:
          name: node_modules.tar.gz
          path: node_modules.tar.gz

  # BUILD THE EXTENSION
  build:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16.20.0"
      - name: Download deps cache artifacts
        uses: actions/download-artifact@v3
        with:
          name: node_modules.tar.gz
      - name: Unzip node_modules
        run: tar xzf node_modules.tar.gz
      - uses: actions/checkout@v3
        with:
            repository: 'rainbow-me/browser-extension-env'
            token: ${{ secrets.DOTENV_GITHUB_ACCESS_TOKEN }}
            path: tmp
      - name: Copy dotenv
        run: cat tmp/dotenv >> .env && rm -rf tmp
      - name: Set IS_TESTING=true
        run: |
          sed -i 's/IS_TESTING.*/IS_TESTING=true/g' .env
      - name: Graphql Setup
        run: yarn graphql-setup
      - name: Build the extension
        run: yarn build:webpack
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rainbowbx-${{ github.sha }}.zip
          path: build/
  # FIREFOX TESTS - Disabled for now till all tests are passing
  # firefox-e2e-parallel:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 16
  #   needs: [build]
  #   env:
  #     DISPLAY: :0
  #     VITEST_SEGFAULT_RETRY: 4
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: "16.20.0"
  #     - name: Download deps cache artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: node_modules.tar.gz
  #     - name: Unzip node_modules
  #       shell: 'bash'
  #       run: tar xzf node_modules.tar.gz
  #     - name: Download build artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #           name: rainbowbx-${{ github.sha }}.zip
  #           path: build
  #     - name: Setup xvfb
  #       shell: 'bash'
  #       run: |
  #         sudo apt-get install -y xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0
  #         # start xvfb in the background
  #         sudo /usr/bin/Xvfb $DISPLAY -screen 0 1280x1024x24 &
  #     - name: Install Anvil
  #       uses: foundry-rs/foundry-toolchain@v1
  #       with:
  #         version: nightly
  #     - uses: browser-actions/setup-firefox@v1
  #       with:
  #         firefox-version: 'latest-devedition'
  #     - uses: actions/checkout@v3
  #       with:
  #           repository: 'rainbow-me/browser-extension-env'
  #           token: ${{ secrets.DOTENV_GITHUB_ACCESS_TOKEN }}
  #           path: tmp
  #     - name: Copy dotenv
  #       shell: 'bash'
  #       run: cat tmp/dotenv >> .env && rm -rf tmp
  #     - name: Run e2e parallel (Firefox)
  #       run: |
  #           export BROWSER=firefox
  #           export OS=linux
  #           export FIREFOX_BIN=/opt/hostedtoolcache/firefox/latest-devedition/x64/firefox
  #           yarn firefox:manifest && yarn firefox:zip
  #           yarn vitest e2e/parallel/newWalletFlow.test.ts --config ./e2e/parallel/vitest.config.ts
  # CHROME TESTS
  chrome-e2e-parallel:
    runs-on: ubuntu-latest
    timeout-minutes: 16
    needs: [build]
    env:
      DISPLAY: :0
      VITEST_SEGFAULT_RETRY: 4
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/testSetup
        with:
          gh-access-token: ${{ secrets.DOTENV_GITHUB_ACCESS_TOKEN }}
      - name: Run e2e parallel (Chrome)
        run: |
          export BROWSER=chrome
          export OS=linux
          export CHROMIUM_BIN=$(find chrome -type f -name 'chrome')
          yarn vitest:parallel --retry=5
  chrome-e2e-swap:
    runs-on: beefy-runner-bx
    timeout-minutes: 25
    needs: [build]
    env:
      DISPLAY: :0
      VITEST_SEGFAULT_RETRY: 3
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/testSetup
        with:
          gh-access-token: ${{ secrets.DOTENV_GITHUB_ACCESS_TOKEN }}
      - name: Run e2e swap (Chrome)
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 25
          max_attempts: 2
          command: |
            export BROWSER=chrome
            export OS=linux
            export CHROMIUM_BIN=$(find chrome -type f -name 'chrome')
            yarn vitest:swap
  chrome-e2e-send:
    runs-on: beefy-runner-bx
    timeout-minutes: 25
    needs: [build]
    env:
      DISPLAY: :0
      VITEST_SEGFAULT_RETRY: 3
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/testSetup
        with:
          gh-access-token: ${{ secrets.DOTENV_GITHUB_ACCESS_TOKEN }}
      - name: Run e2e send (Chrome)
        run: |
            export BROWSER=chrome
            export OS=linux
            export CHROMIUM_BIN=$(find chrome -type f -name 'chrome')
            yarn vitest:send --retry=5
  chrome-e2e-dappInteractions:
    runs-on: beefy-runner-bx
    timeout-minutes: 25
    needs: [build]
    env:
      DISPLAY: :0
      VITEST_SEGFAULT_RETRY: 3
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/testSetup
        with:
          gh-access-token: ${{ secrets.DOTENV_GITHUB_ACCESS_TOKEN }}
      - name: Run e2e dappInteractions (Chrome)
        run: |
            export BROWSER=chrome
            export OS=linux
            export CHROMIUM_BIN=$(find chrome -type f -name 'chrome')
            yarn vitest:dappInteractions --retry=5
  # BRAVE TESTS
  # brave-e2e:
  #   needs: [build]
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 20
  #   env:
  #     DISPLAY: :0
  #     VITEST_SEGFAULT_RETRY: 3
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: "16.20.0"
  #     - name: Download deps cache artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: node_modules.tar.gz
  #     - name: Unzip node_modules
  #       run: tar xzvf node_modules.tar.gz
  #     - name: Download build artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: rainbowbx-${{ github.sha }}.zip
  #         path: build
  #     - name: Setup xvfb
  #       run: |
  #         sudo apt-get install -y xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0
  #         # start xvfb in the background
  #         sudo /usr/bin/Xvfb $DISPLAY -screen 0 1280x1024x24 &
  #     - name: Setup Brave browser
  #       run: |
  #         sudo apt install apt-transport-https curl
  #         sudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
  #         echo "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main"|sudo tee /etc/apt/sources.list.d/brave-browser-release.list
  #         sudo apt update
  #         sudo apt install brave-browser
  #     - name: Install Anvil
  #       uses: foundry-rs/foundry-toolchain@v1
  #       with:
  #         version: nightly
  #     - uses: actions/checkout@v3
  #       with:
  #           repository: 'rainbow-me/browser-extension-env'
  #           token: ${{ secrets.DOTENV_GITHUB_ACCESS_TOKEN }}
  #           path: tmp
  #     - name: Copy dotenv
  #       run: cat tmp/dotenv >> .env && rm -rf tmp
  #     - name: Run e2e (Brave)
  #       uses: nick-fields/retry@v2
  #       with:
  #         timeout_minutes: 18
  #         max_attempts: 3
  #         command:  |
  #           export BROWSER=brave
  #           export OS=linux
  #           export BRAVE_BIN='/usr/bin/brave-browser-stable'
  #           yarn vitest:parallel && yarn vitest:serial
  # UNIT TESTS
  unit-tests:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16.20.0"
      - name: Download deps cache artifacts
        uses: actions/download-artifact@v3
        with:
          name: node_modules.tar.gz
      - name: Unzip node_modules
        run: tar xzf node_modules.tar.gz
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          profile: minimal
          override: true
      - name: Graphql Setup
        run: yarn graphql-setup
      - name: Install Anvil
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - uses: actions/checkout@v3
        with:
            repository: 'rainbow-me/browser-extension-env'
            token: ${{ secrets.DOTENV_GITHUB_ACCESS_TOKEN }}
            path: tmp
      - name: Copy dotenv
        run: cat tmp/dotenv >> .env && rm -rf tmp
      - name: Run unit tests
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 3
          command: yarn test

  # LINT, TYPECHECK, AUDIT
  ci-checks:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16.20.0"
      - name: Download deps cache artifacts
        uses: actions/download-artifact@v3
        with:
          name: node_modules.tar.gz
      - name: Unzip node_modules
        run: tar xzf node_modules.tar.gz
      - name: DS Setup
        run: yarn ds:install
      - name: Graphql Setup
        run: yarn graphql-setup
      - name: Lint
        run: yarn lint
      - name: Audit CI
        run:  yarn audit:ci
      - name: Check types
        run: yarn typecheck
  cleanup:
    runs-on:  ubuntu-latest
    needs: [chrome-e2e-parallel, chrome-e2e-swap, chrome-e2e-send, chrome-e2e-dappInteractions, unit-tests, ci-checks]
    steps:
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: node_modules.tar.gz
