diff --git a/node_modules/@tanstack/query-core/build/lib/queryObserver.esm.js b/node_modules/@tanstack/query-core/build/lib/queryObserver.esm.js
index cc9474e..eb3ee72 100644
--- a/node_modules/@tanstack/query-core/build/lib/queryObserver.esm.js
+++ b/node_modules/@tanstack/query-core/build/lib/queryObserver.esm.js
@@ -347,7 +347,8 @@ class QueryObserver extends Subscribable {
     const result = {
       status,
       fetchStatus,
-      isLoading,
+      isLoading: isLoading && fetchStatus === 'fetching',
+      isIdle: isLoading && fetchStatus === 'idle',
       isSuccess: status === 'success',
       isError,
       isInitialLoading: isLoading && isFetching,
diff --git a/node_modules/@tanstack/query-core/build/lib/queryObserver.js b/node_modules/@tanstack/query-core/build/lib/queryObserver.js
index ca53940..c1f0238 100644
--- a/node_modules/@tanstack/query-core/build/lib/queryObserver.js
+++ b/node_modules/@tanstack/query-core/build/lib/queryObserver.js
@@ -351,7 +351,8 @@ class QueryObserver extends subscribable.Subscribable {
     const result = {
       status,
       fetchStatus,
-      isLoading,
+      isLoading: isLoading && fetchStatus === 'fetching',
+      isIdle: isLoading && fetchStatus === 'idle',
       isSuccess: status === 'success',
       isError,
       isInitialLoading: isLoading && isFetching,
diff --git a/node_modules/@tanstack/query-core/build/lib/types.d.ts b/node_modules/@tanstack/query-core/build/lib/types.d.ts
index 5232e9d..ac3270d 100644
--- a/node_modules/@tanstack/query-core/build/lib/types.d.ts
+++ b/node_modules/@tanstack/query-core/build/lib/types.d.ts
@@ -231,6 +231,7 @@ export interface QueryObserverBaseResult<TData = unknown, TError = unknown> {
     isFetched: boolean;
     isFetchedAfterMount: boolean;
     isFetching: boolean;
+    isIdle: boolean;
     isLoading: boolean;
     isLoadingError: boolean;
     isInitialLoading: boolean;
@@ -250,7 +251,8 @@ export interface QueryObserverLoadingResult<TData = unknown, TError = unknown> e
     data: undefined;
     error: null;
     isError: false;
-    isLoading: true;
+    isIdle: boolean;
+    isLoading: boolean;
     isLoadingError: false;
     isRefetchError: false;
     isSuccess: false;
@@ -260,6 +262,7 @@ export interface QueryObserverLoadingErrorResult<TData = unknown, TError = unkno
     data: undefined;
     error: TError;
     isError: true;
+    isIdle: false;
     isLoading: false;
     isLoadingError: true;
     isRefetchError: false;
@@ -270,6 +273,7 @@ export interface QueryObserverRefetchErrorResult<TData = unknown, TError = unkno
     data: TData;
     error: TError;
     isError: true;
+    isIdle: false;
     isLoading: false;
     isLoadingError: false;
     isRefetchError: true;
@@ -280,6 +284,7 @@ export interface QueryObserverSuccessResult<TData = unknown, TError = unknown> e
     data: TData;
     error: null;
     isError: false;
+    isIdle: false;
     isLoading: false;
     isLoadingError: false;
     isRefetchError: false;
@@ -300,7 +305,8 @@ export interface InfiniteQueryObserverLoadingResult<TData = unknown, TError = un
     data: undefined;
     error: null;
     isError: false;
-    isLoading: true;
+    isIdle: boolean;
+    isLoading: boolean;
     isLoadingError: false;
     isRefetchError: false;
     isSuccess: false;
@@ -310,6 +316,7 @@ export interface InfiniteQueryObserverLoadingErrorResult<TData = unknown, TError
     data: undefined;
     error: TError;
     isError: true;
+    isIdle: false;
     isLoading: false;
     isLoadingError: true;
     isRefetchError: false;
@@ -320,6 +327,7 @@ export interface InfiniteQueryObserverRefetchErrorResult<TData = unknown, TError
     data: InfiniteData<TData>;
     error: TError;
     isError: true;
+    isIdle: false;
     isLoading: false;
     isLoadingError: false;
     isRefetchError: true;
@@ -330,6 +338,7 @@ export interface InfiniteQueryObserverSuccessResult<TData = unknown, TError = un
     data: InfiniteData<TData>;
     error: null;
     isError: false;
+    isIdle: false;
     isLoading: false;
     isLoadingError: false;
     isRefetchError: false;
