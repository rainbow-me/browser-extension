// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               unknown
// source: external/assets/updates.proto

import { type Asset } from '../common/asset';
import { type ResponseMetadata } from '../common/request_metadata';

/** Balance represents a blockchain asset balance for a specific wallet */
export interface Balance {
  /** Whether this is a native token (true) or ERC20 token (false) */
  isNative: boolean;
  /** Blockchain network chain ID */
  chainId: number;
  /** Token contract address (empty for native tokens) */
  address: string;
  /** Balance amount as raw wei string representation */
  amount: string;
  /** Block timestamp when this balance was recorded */
  blockTimestamp: Date | undefined;
  /** Server timestamp when this balance was last updated */
  updatedAt: Date | undefined;
}

export interface GetAssetUpdatesRequest {
  /**
   * Wallet address to get asset updates for
   *
   * examples: "0x742d35Cc6573C42c6f29B7b3b305BDaA8e0Dfc32", "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
   */
  address: string;
  /**
   * Last known updatedAt timestamp - used for incremental updates
   * If omitted, return all assets
   *
   * examples: "2024-01-01T00:00:00Z", "2024-01-02T00:00:00Z"
   */
  timestamp?: Date | undefined;
  /**
   * Chain IDs to filter results (optional by default in proto3)
   * If not provided, returns assets from all chains
   */
  chainIds?: string | undefined;
  /**
   * Currency for price information (optional)
   * If not provided, prices are not included in response
   *
   * examples: "usd", "eur", "eth"
   */
  currency?: string | undefined;
  /**
   * Forced tokens to be associated with wallet, even if they have no balance
   *
   * examples: "0xA0b86a33E6411c8c63628a039C7b7dFEb57dBDcE:1", "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174:137"
   */
  forcedTokens?: string | undefined;
}

/** Error represents an error that occurred during processing */
export interface AssetError {
  /** Error code */
  code: string;
  /** Human-readable error message */
  message: string;
  /** Additional error details (e.g., which chain or token failed) */
  details: { [key: string]: string };
}

export interface AssetError_DetailsEntry {
  key: string;
  value: string;
}

export interface GetAssetUpdatesResponse {
  /** Metadata about the request */
  metadata: ResponseMetadata | undefined;
  /**
   * Asset updates with full asset information (balance, price, token metadata)
   *
   * examples of keys: "0xA0b86a33E6411c8c63628a039C7b7dFEb57dBDcE:1", "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174:137"
   */
  result: { [key: string]: AssetBalance };
  /** Errors that occurred while fetching specific assets */
  errors: AssetError[];
}

export interface GetAssetUpdatesResponse_ResultEntry {
  key: string;
  value: AssetBalance | undefined;
}

/** AssetBalance represents an asset with its balance quantity */
export interface AssetBalance {
  /** Detailed asset information */
  asset: Asset | undefined;
  /** Balance quantity as string (raw amount) */
  quantity: string;
  /** Whether this is considered a small balance */
  smallBalance: boolean;
  /** Server timestamp when this balance was last updated */
  updatedAt: Date | undefined;
  /**
   * Value is the monetary value (FIAT-cryptocurrency) of the asset quantity, given price and market stats
   * Its a string representing a numeric value
   *
   * e.g. "0.000107319767290800000002644277", "0", "1260.325"
   */
  value: string;
}
